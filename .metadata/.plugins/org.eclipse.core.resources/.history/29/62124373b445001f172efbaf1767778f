/*******************************************************************************
 * © 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.infosys.common.GeneratedEntities;
// Generated Nov 21, 2017 4:03:31 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.infosys.common.GeneratedEntities.Patientcase;

/**
 * Investigationvaluescasemapper generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "investigationvaluescasemapper", catalog = "intraop_dev")
public class Investigationvaluescasemapper implements java.io.Serializable {

	private Integer investigationValuesCaseMapperId;
	private Patientcase patientcase;
	private Date date;
	private String diagnosis;
	private String details;
	private Boolean status;
	private Investigationstests investigationsTests;
	private String createdBy;
	private Date createdTime;
	private String updatedBy;
	private Date updatedTime;
	
	
	public Investigationvaluescasemapper() {
	}

	public Investigationvaluescasemapper(Patientcase patientcase, Investigationstests investigationsTests) {
		this.patientcase = patientcase;
		this.investigationsTests = investigationsTests;
	}

	public Investigationvaluescasemapper(Patientcase patientcase, Date date, String diagnosis, String details, Boolean status,
			Investigationstests investigationsTests) {
		this.patientcase = patientcase;
		this.date = date;
		this.diagnosis = diagnosis;
		this.details = details;
		this.status = status;
		this.investigationsTests = investigationsTests;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "InvestigationValuesCaseMapperID", unique = true, nullable = false)
	public Integer getInvestigationValuesCaseMapperId() {
		return this.investigationValuesCaseMapperId;
	}

	public void setInvestigationValuesCaseMapperId(Integer investigationValuesCaseMapperId) {
		this.investigationValuesCaseMapperId = investigationValuesCaseMapperId;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "caseID", nullable = false)
	public Patientcase getPatientcase() {
		return this.patientcase;
	}

	public void setPatientcase(Patientcase patientcase) {
		this.patientcase = patientcase;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Date", length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "Diagnosis", length = 5000)
	public String getDiagnosis() {
		return this.diagnosis;
	}

	public void setDiagnosis(String diagnosis) {
		this.diagnosis = diagnosis;
	}

	@Column(name = "Details", length = 1000)
	public String getDetails() {
		return this.details;
	}

	public void setDetails(String details) {
		this.details = details;
	}

	@Column(name = "Status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "InvestigationsTestsID", nullable = false)
	public Investigationstests getinvestigationsTests() {
		return this.investigationsTests;
	}

	public void setinvestigationsTests(Investigationstests investigationsTests) {
		this.investigationsTests = investigationsTests;
	}

	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

}
