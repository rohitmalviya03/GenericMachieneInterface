/*******************************************************************************
 * © 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.infosys.common.GeneratedEntities;
// Generated Oct 16, 2017 2:58:55 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fluidvalue generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "fluidvalue", catalog = "intraop_dev")
public class Fluidvalue implements java.io.Serializable {

	private Integer fluidValueId;
	private Integer fluidId;
	private String fluidName;
	private int patientId;
	private Long caseId;
	private Float volume;
	private Float initialVolume;
	private String volumeUnit;
	private Date startTime;
	private String comments;
	private Boolean isCompleted;
	private Date finishTime;
	private String createdBy;
	private Date createdTime;
	private String updatedBy;
	private Date updatedTime;

	public Fluidvalue() {
	}

	public Fluidvalue(int fluidId) {
		this.fluidId = fluidId;
	}
	@Column(name = "InitialVolume")
	public Float getInitialVolume() {
		return initialVolume;
	}

	public void setInitialVolume(Float initialVolume) {
		this.initialVolume = initialVolume;
	}

	public Fluidvalue(Integer fluidId, Float volume, Date startTime, String comments, Boolean isCompleted, Date finishTime,
			String createdBy, Date createdTime, String updatedBy, Date updatedTime) {
		this.fluidId = fluidId;
		this.volume = volume;
		this.startTime = startTime;
		this.comments = comments;
		this.isCompleted = isCompleted;
		this.finishTime = finishTime;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	public Fluidvalue(Integer fluidValueId, int fluidId, String fluidName, int patientId, Long caseId, Float volume,
			String volumeUnit, Date startTime, String comments, Boolean isCompleted, Date finishTime,
			String createdBy, Date createdTime, String updatedBy, Date updatedTime) {
		super();
		this.fluidValueId = fluidValueId;
		this.fluidId = fluidId;
		this.fluidName = fluidName;
		this.patientId = patientId;
		this.caseId = caseId;
		this.volume = volume;
		this.volumeUnit = volumeUnit;
		this.startTime = startTime;
		this.comments = comments;
		this.isCompleted = isCompleted;
		this.finishTime = finishTime;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	public Fluidvalue(Integer fluidValueId, int fluidId, int patientId, Long caseId, Float volume, Date startTime,
			String comments, Boolean isCompleted, Date finishTime, String createdBy, Date createdTime, String updatedBy,
			Date updatedTime) {
		super();
		this.fluidValueId = fluidValueId;
		this.fluidId = fluidId;
		this.patientId = patientId;
		this.caseId = caseId;
		this.volume = volume;
		this.startTime = startTime;
		this.comments = comments;
		this.isCompleted = isCompleted;
		this.finishTime = finishTime;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	public Fluidvalue(Integer fluidValueId, int fluidId, String fluidName, int patientId, Long caseId, Float volume,
			Date startTime, String comments, Boolean isCompleted, Date finishTime, String createdBy, Date createdTime,
			String updatedBy, Date updatedTime) {
		super();
		this.fluidValueId = fluidValueId;
		this.fluidId = fluidId;
		this.fluidName = fluidName;
		this.patientId = patientId;
		this.caseId = caseId;
		this.volume = volume;
		this.startTime = startTime;
		this.comments = comments;
		this.isCompleted = isCompleted;
		this.finishTime = finishTime;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}



	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "FluidValueId", unique = true, nullable = false)
	public Integer getFluidValueId() {
		return this.fluidValueId;
	}

	public int getPatientId() {
		return patientId;
	}

	public void setPatientId(int patientId) {
		this.patientId = patientId;
	}

	public Long getCaseId() {
		return caseId;
	}

	public void setCaseId(Long caseId) {
		this.caseId = caseId;
	}

	public void setFluidValueId(Integer fluidValueId) {
		this.fluidValueId = fluidValueId;
	}

	@Column(name = "FluidId")
	public Integer getFluidId() {
		return this.fluidId;
	}

	public void setFluidId(Integer fluidId) {
		this.fluidId = fluidId;
	}

	@Column(name = "FluidName", length = 1000)
	public String getFluidName() {
		return fluidName;
	}

	public void setFluidName(String fluidName) {
		this.fluidName = fluidName;
	}

	@Column(name = "Volume")
	public Float getVolume() {
		return this.volume;
	}

	public void setVolume(Float volume) {
		this.volume = volume;
	}

	@Column(name = "VolumeUnit", length = 45)
	public String getVolumeUnit() {
		return volumeUnit;
	}

	public void setVolumeUnit(String volumeUnit) {
		this.volumeUnit = volumeUnit;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "StartTime", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Column(name = "Comments", length = 2000)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Column(name = "IsCompleted")
	public Boolean getIsCompleted() {
		return this.isCompleted;
	}

	public void setIsCompleted(Boolean isCompleted) {
		this.isCompleted = isCompleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FinishTime", length = 19)
	public Date getFinishTime() {
		return this.finishTime;
	}

	public void setFinishTime(Date finishTime) {
		this.finishTime = finishTime;
	}

	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

}
