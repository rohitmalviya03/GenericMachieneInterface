/*******************************************************************************
 * © 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.infosys.common.GeneratedEntities;
// Generated Oct 31, 2017 3:50:51 PM by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Investigationmeasuringunits generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "investigationmeasuringunits", catalog = "intraop_dev")
public class Investigationmeasuringunits implements java.io.Serializable {

	private Integer investigationMeasuringUnitsId;
	private Investigationmeasuringcategories category;
	private String unitName;
	private String unitSymbol;
	private Integer minValue;
	private Integer maximumValue;

	public Investigationmeasuringunits() {
	}

	public Investigationmeasuringunits(Investigationmeasuringcategories category, String unitName, String unitSymbol, Integer minValue,
			Integer maximumValue) {
		this.category = category;
		this.unitName = unitName;
		this.unitSymbol = unitSymbol;
		this.minValue = minValue;
		this.maximumValue = maximumValue;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "InvestigationMeasuringUnitsID", unique = true, nullable = false)
	public Integer getInvestigationMeasuringUnitsId() {
		return this.investigationMeasuringUnitsId;
	}

	public void setInvestigationMeasuringUnitsId(Integer investigationMeasuringUnitsId) {
		this.investigationMeasuringUnitsId = investigationMeasuringUnitsId;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CategoryID")
	public Investigationmeasuringcategories getCategory() {
		return this.category;
	}

	public void setCategory(Investigationmeasuringcategories category) {
		this.category = category;
	}

	@Column(name = "UnitName", length = 45)
	public String getUnitName() {
		return this.unitName;
	}

	public void setUnitName(String unitName) {
		this.unitName = unitName;
	}

	@Column(name = "UnitSymbol", length = 45)
	public String getUnitSymbol() {
		return this.unitSymbol;
	}

	public void setUnitSymbol(String unitSymbol) {
		this.unitSymbol = unitSymbol;
	}

	@Column(name = "MinValue")
	public Integer getMinValue() {
		return this.minValue;
	}

	public void setMinValue(Integer minValue) {
		this.minValue = minValue;
	}

	@Column(name = "MaximumValue")
	public Integer getMaximumValue() {
		return this.maximumValue;
	}

	public void setMaximumValue(Integer maximumValue) {
		this.maximumValue = maximumValue;
	}

}
