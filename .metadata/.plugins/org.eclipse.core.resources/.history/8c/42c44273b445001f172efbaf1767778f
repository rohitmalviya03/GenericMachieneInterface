/*******************************************************************************
 * © 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.infosys.common.GeneratedEntities;
// Generated Sep 27, 2017 5:38:18 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * IntraopSurgeryevents generated by hbm2java
 */
@Entity
@Table(name = "intraop_surgeryevents", catalog = "intraop_dev")
public class IntraopSurgeryevents implements java.io.Serializable
{

	private Integer surgeryEventId;
	private IntraopEventsmaster intraopEventsmaster;
	private String surgeryName;
	private int eventOrder;
	private String createdBy;
	private Date createdTime;
	private String updatedBy;
	private Date updatedTime;

	public IntraopSurgeryevents()
	{
	}

	public IntraopSurgeryevents(IntraopEventsmaster intraopEventsmaster, String surgeryName, int eventOrder)
	{
		this.intraopEventsmaster = intraopEventsmaster;
		this.surgeryName = surgeryName;
		this.eventOrder = eventOrder;
	}

	public IntraopSurgeryevents(IntraopEventsmaster intraopEventsmaster, String surgeryName, int eventOrder,
	        String createdBy, Date createdTime, String updatedBy, Date updatedTime)
	{
		this.intraopEventsmaster = intraopEventsmaster;
		this.surgeryName = surgeryName;
		this.eventOrder = eventOrder;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "SurgeryEventID", unique = true, nullable = false)
	public Integer getSurgeryEventId()
	{
		return this.surgeryEventId;
	}

	public void setSurgeryEventId(Integer surgeryEventId)
	{
		this.surgeryEventId = surgeryEventId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EventID", nullable = false)
	public IntraopEventsmaster getIntraopEventsmaster()
	{
		return this.intraopEventsmaster;
	}

	public void setIntraopEventsmaster(IntraopEventsmaster intraopEventsmaster)
	{
		this.intraopEventsmaster = intraopEventsmaster;
	}

	@Column(name = "SurgeryName", nullable = false, length = 45)
	public String getSurgeryName()
	{
		return this.surgeryName;
	}

	public void setSurgeryName(String surgeryName)
	{
		this.surgeryName = surgeryName;
	}

	@Column(name = "EventOrder", nullable = false)
	public int getEventOrder()
	{
		return this.eventOrder;
	}

	public void setEventOrder(int eventOrder)
	{
		this.eventOrder = eventOrder;
	}

	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy()
	{
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy)
	{
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime()
	{
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime)
	{
		this.createdTime = createdTime;
	}

	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy()
	{
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy)
	{
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime()
	{
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime)
	{
		this.updatedTime = updatedTime;
	}

}
