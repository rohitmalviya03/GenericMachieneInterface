package Server;

import com.fazecast.jSerialComm.*;

public class DraegerSerialComm {
    public static void ConnectDragger(String portName,String machineId,int baudRate) {
        SerialPort serialPort = SerialPort.getCommPort(portName); // Change to your port
        serialPort.setBaudRate(baudRate);
        serialPort.setNumDataBits(8);
        serialPort.setNumStopBits(1);
        serialPort.setParity(SerialPort.NO_PARITY);

        if (serialPort.openPort()) {
            System.out.println("Port opened successfully");
        } else {
            System.out.println("Failed to open port");
            return;
        }

        try {
            while (true) {
                byte[] receivedData = readMessage(serialPort);
                if (receivedData != null && receivedData.length >= 5) {
                    //if (receivedData[0] == (byte) 0x1B && receivedData[1] == (byte) 0x51) {
                        System.out.println("Received ICC Command, sending ID Command response...");
                        sendICresponse(serialPort);
                  // }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            serialPort.closePort();
            System.out.println("Port closed");
        }
    }

    private static void sendICresponse(SerialPort serialPort) {
        byte[] idCommand = {(byte) 0x01, (byte) 0x51, (byte) 0x35, (byte) 0x32, (byte) 0x0D};
        serialPort.writeBytes(idCommand, idCommand.length);
        System.out.println("ID Command sent");
    }

    
    private static void sendIDCommand(SerialPort serialPort) {
        byte[] idCommand = {(byte) 0x1B, (byte) 0x52, (byte) 0x36, (byte) 0x32, (byte) 0x0D};
        serialPort.writeBytes(idCommand, idCommand.length);
        System.out.println("ID Command sent");
    }

    private static byte[] readMessage(SerialPort serialPort) throws InterruptedException {
        Thread.sleep(100); // Allow time for response
        byte[] buffer = new byte[256];
        int numRead = serialPort.readBytes(buffer, buffer.length);

        if (numRead > 0) {
            System.out.print("Response received: ");
            byte[] response = new byte[numRead];
            System.arraycopy(buffer, 0, response, 0, numRead);
            for (int i = 0; i < numRead; i++) {
                System.out.printf("%02X ", buffer[i]);
            }
            System.out.println();
            return response;
        } else {
            System.out.println("No response received");
            return null;
        }
    }
}
