/*******************************************************************************
 * © 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.infosys.common.GeneratedEntities;
// Generated Oct 31, 2017 3:03:40 PM by Hibernate Tools 4.3.5.Final

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.FetchMode;
import org.hibernate.annotations.Fetch;

/**
 * Investigationparameterfields generated by hbm2java
 */

@SuppressWarnings("serial")
@Entity
@Table(name = "investigationparameterfields", catalog = "intraop_dev")
public class Investigationparameterfields implements java.io.Serializable {

	private Integer investigationParameterFieldsId;
	private Investigationtestsparameters investigationTestsParameters;
	private String name;
	private BigDecimal upperSpecificationLimit;
	private BigDecimal lowerSpecificationLimit;
	private Investigationmeasuringunits measuringUnit;
	private Integer measuringUnitExponent;
	private Investigationmeasuringunitratios measuringUnitRatio;
	private String investigationParameterFieldscol;

	public Investigationparameterfields() {
	}

	public Investigationparameterfields(Investigationtestsparameters investigationTestsParameters, String name,
			BigDecimal upperSpecificationLimit, BigDecimal lowerSpecificationLimit, Investigationmeasuringunits measuringUnit,
			Integer measuringUnitExponent, Investigationmeasuringunitratios measuringUnitRatio, String investigationParameterFieldscol) {
		this.investigationTestsParameters = investigationTestsParameters;
		this.name = name;
		this.upperSpecificationLimit = upperSpecificationLimit;
		this.lowerSpecificationLimit = lowerSpecificationLimit;
		this.measuringUnit = measuringUnit;
		this.measuringUnitExponent = measuringUnitExponent;
		this.measuringUnitRatio = measuringUnitRatio;
		this.investigationParameterFieldscol = investigationParameterFieldscol;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "InvestigationParameterFieldsID", unique = true, nullable = false)
	public Integer getInvestigationParameterFieldsId() {
		return this.investigationParameterFieldsId;
	}

	public void setInvestigationParameterFieldsId(Integer investigationParameterFieldsId) {
		this.investigationParameterFieldsId = investigationParameterFieldsId;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "InvestigationTestsParametersID")
	public Investigationtestsparameters getInvestigationTestsParameters() {
		return this.investigationTestsParameters;
	}

	public void setInvestigationTestsParameters(Investigationtestsparameters investigationTestsParameters) {
		this.investigationTestsParameters = investigationTestsParameters;
	}

	@Column(name = "Name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "UpperSpecificationLimit", precision = 5)
	public BigDecimal getUpperSpecificationLimit() {
		return this.upperSpecificationLimit;
	}

	public void setUpperSpecificationLimit(BigDecimal upperSpecificationLimit) {
		this.upperSpecificationLimit = upperSpecificationLimit;
	}

	@Column(name = "LowerSpecificationLimit", precision = 5)
	public BigDecimal getLowerSpecificationLimit() {
		return this.lowerSpecificationLimit;
	}

	public void setLowerSpecificationLimit(BigDecimal lowerSpecificationLimit) {
		this.lowerSpecificationLimit = lowerSpecificationLimit;
	}
	@ManyToOne
	@JoinColumn(name = "MeasuringUnitID")
	public Investigationmeasuringunits getMeasuringUnit() {
		return this.measuringUnit;
	}

	public void setMeasuringUnit(Investigationmeasuringunits measuringUnit) {
		this.measuringUnit = measuringUnit;
	}

	@Column(name = "MeasuringUnitExponent")
	public Integer getMeasuringUnitExponent() {
		return this.measuringUnitExponent;
	}

	public void setMeasuringUnitExponent(Integer measuringUnitExponent) {
		this.measuringUnitExponent = measuringUnitExponent;
	}
	@ManyToOne
	@Fetch(org.hibernate.annotations.FetchMode.JOIN)
	@JoinColumn(name = "MeasuringUnitRatioID")
	public Investigationmeasuringunitratios getMeasuringUnitRatio() {
		return this.measuringUnitRatio;
	}

	public void setMeasuringUnitRatio(Investigationmeasuringunitratios measuringUnitRatio) {
		this.measuringUnitRatio = measuringUnitRatio;
	}

	@Column(name = "InvestigationParameterFieldscol", length = 45)
	public String getInvestigationParameterFieldscol() {
		return this.investigationParameterFieldscol;
	}

	public void setInvestigationParameterFieldscol(String investigationParameterFieldscol) {
		this.investigationParameterFieldscol = investigationParameterFieldscol;
	}

}
