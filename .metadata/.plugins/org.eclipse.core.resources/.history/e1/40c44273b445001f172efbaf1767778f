/*******************************************************************************
 * © 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.infosys.common.GeneratedEntities;
// Generated Sep 12, 2017 10:07:52 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

// TODO: Auto-generated Javadoc
/**
 * IntraopPatientdevicemapping generated by hbm2java.
 */
@Entity
@Table(name = "intraop_patientdevicemapping", catalog = "intraop_dev")
public class IntraopPatientdevicemapping implements java.io.Serializable
{

	/** The pdmapping id. */
	private int pdmappingId;
	
	/** The intraop anesthesiarecord. */
	private IntraopAnesthesiarecord intraopAnesthesiarecord;
	
	/** The intraop devices. */
	private IntraopDevices intraopDevices;
	
	/** The assignment status. */
	private String assignmentStatus;
	
	/** The created by. */
	private String createdBy;
	
	/** The created time. */
	private Date createdTime;
	
	/** The updated by. */
	private String updatedBy;
	
	/** The updated time. */
	private Date updatedTime;

	/**
	 * Instantiates a new intraop patientdevicemapping.
	 */
	public IntraopPatientdevicemapping()
	{
	}

	/**
	 * Instantiates a new intraop patientdevicemapping.
	 *
	 * @param pdmappingId the pdmapping id
	 * @param intraopAnesthesiarecord the intraop anesthesiarecord
	 * @param intraopDevices the intraop devices
	 */
	public IntraopPatientdevicemapping(int pdmappingId, IntraopAnesthesiarecord intraopAnesthesiarecord,
	        IntraopDevices intraopDevices)
	{
		this.pdmappingId = pdmappingId;
		this.intraopAnesthesiarecord = intraopAnesthesiarecord;
		this.intraopDevices = intraopDevices;
	}

	/**
	 * Instantiates a new intraop patientdevicemapping.
	 *
	 * @param pdmappingId the pdmapping id
	 * @param intraopAnesthesiarecord the intraop anesthesiarecord
	 * @param intraopDevices the intraop devices
	 * @param assignmentStatus the assignment status
	 * @param createdBy the created by
	 * @param createdTime the created time
	 * @param updatedBy the updated by
	 * @param updatedTime the updated time
	 */
	public IntraopPatientdevicemapping(int pdmappingId, IntraopAnesthesiarecord intraopAnesthesiarecord,
	        IntraopDevices intraopDevices, String assignmentStatus, String createdBy, Date createdTime,
	        String updatedBy, Date updatedTime)
	{
		this.pdmappingId = pdmappingId;
		this.intraopAnesthesiarecord = intraopAnesthesiarecord;
		this.intraopDevices = intraopDevices;
		this.assignmentStatus = assignmentStatus;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;
	
	/**
	 * Gets the pdmapping id.
	 *
	 * @return the pdmapping id
	 */
	@Id

	@Column(name = "PDMappingId", unique = true, nullable = false)
	public int getPdmappingId()
	{
		return this.pdmappingId;
	}

	/**
	 * Sets the pdmapping id.
	 *
	 * @param pdmappingId the new pdmapping id
	 */
	public void setPdmappingId(int pdmappingId)
	{
		this.pdmappingId = pdmappingId;
	}

	/**
	 * Gets the intraop anesthesiarecord.
	 *
	 * @return the intraop anesthesiarecord
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RecordID", nullable = false)
	public IntraopAnesthesiarecord getIntraopAnesthesiarecord()
	{
		return this.intraopAnesthesiarecord;
	}

	/**
	 * Sets the intraop anesthesiarecord.
	 *
	 * @param intraopAnesthesiarecord the new intraop anesthesiarecord
	 */
	public void setIntraopAnesthesiarecord(IntraopAnesthesiarecord intraopAnesthesiarecord)
	{
		this.intraopAnesthesiarecord = intraopAnesthesiarecord;
	}

	/**
	 * Gets the intraop devices.
	 *
	 * @return the intraop devices
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DeviceID", nullable = false)
	public IntraopDevices getIntraopDevices()
	{
		return this.intraopDevices;
	}

	/**
	 * Sets the intraop devices.
	 *
	 * @param intraopDevices the new intraop devices
	 */
	public void setIntraopDevices(IntraopDevices intraopDevices)
	{
		this.intraopDevices = intraopDevices;
	}

	/**
	 * Gets the assignment status.
	 *
	 * @return the assignment status
	 */
	@Column(name = "AssignmentStatus", length = 45)
	public String getAssignmentStatus()
	{
		return this.assignmentStatus;
	}

	/**
	 * Sets the assignment status.
	 *
	 * @param assignmentStatus the new assignment status
	 */
	public void setAssignmentStatus(String assignmentStatus)
	{
		this.assignmentStatus = assignmentStatus;
	}

	/**
	 * Gets the created by.
	 *
	 * @return the created by
	 */
	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy()
	{
		return this.createdBy;
	}

	/**
	 * Sets the created by.
	 *
	 * @param createdBy the new created by
	 */
	public void setCreatedBy(String createdBy)
	{
		this.createdBy = createdBy;
	}

	/**
	 * Gets the created time.
	 *
	 * @return the created time
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime()
	{
		return this.createdTime;
	}

	/**
	 * Sets the created time.
	 *
	 * @param createdTime the new created time
	 */
	public void setCreatedTime(Date createdTime)
	{
		this.createdTime = createdTime;
	}

	/**
	 * Gets the updated by.
	 *
	 * @return the updated by
	 */
	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy()
	{
		return this.updatedBy;
	}

	/**
	 * Sets the updated by.
	 *
	 * @param updatedBy the new updated by
	 */
	public void setUpdatedBy(String updatedBy)
	{
		this.updatedBy = updatedBy;
	}

	/**
	 * Gets the updated time.
	 *
	 * @return the updated time
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime()
	{
		return this.updatedTime;
	}

	/**
	 * Sets the updated time.
	 *
	 * @param updatedTime the new updated time
	 */
	public void setUpdatedTime(Date updatedTime)
	{
		this.updatedTime = updatedTime;
	}

}
