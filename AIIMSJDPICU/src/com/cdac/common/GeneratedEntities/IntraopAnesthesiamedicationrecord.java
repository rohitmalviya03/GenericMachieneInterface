/*******************************************************************************
 * ï¿½ 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.cdac.common.GeneratedEntities;
// Generated Oct 26, 2017 12:07:42 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * IntraopAnesthesiamedicationrecord generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "intraop_anesthesiamedicationrecord", catalog = "intraop_dev")
public class IntraopAnesthesiamedicationrecord implements java.io.Serializable {

	private Integer anesthesiaMedicationRecordId;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="AnesthesiaRecordID", nullable = false)
	private IntraopAnesthesiarecord anesthesiarecord;
	private String anesthesiaType;
	private String anesthesiaSubType;
	private String medicine;
	private Float volume;
	private Float adjustment;
	private String createdBy;
	private Date createdTime;
	private String updatedBy;
	private Date updatedTime;

	public IntraopAnesthesiamedicationrecord() {
	}

	public IntraopAnesthesiamedicationrecord(IntraopAnesthesiarecord anesthesiarecord, String anesthesiaType) {
		this.anesthesiarecord = anesthesiarecord;
		this.anesthesiaType = anesthesiaType;
	}

	public IntraopAnesthesiamedicationrecord(IntraopAnesthesiarecord anesthesiarecord, String anesthesiaType, String anesthesiaSubType,
			String medicine, Float volume, Float adjustment, String createdBy, Date createdTime, String updatedBy,
			Date updatedTime) {
		this.anesthesiarecord = anesthesiarecord;
		this.anesthesiaType = anesthesiaType;
		this.anesthesiaSubType = anesthesiaSubType;
		this.medicine = medicine;
		this.volume = volume;
		this.adjustment = adjustment;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}
	

	public IntraopAnesthesiamedicationrecord(String anesthesiaType, String anesthesiaSubType, String medicine,
			Float volume, Float adjustment) {
		super();
		this.anesthesiaType = anesthesiaType;
		this.anesthesiaSubType = anesthesiaSubType;
		this.medicine = medicine;
		this.volume = volume;
		this.adjustment = adjustment;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "AnesthesiaMedicationRecordID", unique = true, nullable = false)
	public Integer getAnesthesiaMedicationRecordId() {
		return this.anesthesiaMedicationRecordId;
	}

	public void setAnesthesiaMedicationRecordId(Integer anesthesiaMedicationRecordId) {
		this.anesthesiaMedicationRecordId = anesthesiaMedicationRecordId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="AnesthesiaRecordID", nullable = false)
	public IntraopAnesthesiarecord getAnesthesiaRecordId() {
		return this.anesthesiarecord;
	}

	public void setAnesthesiaRecordId(IntraopAnesthesiarecord anesthesiarecord) {
		this.anesthesiarecord = anesthesiarecord;
	}

	@Column(name = "AnesthesiaType", nullable = false, length = 100)
	public String getAnesthesiaType() {
		return this.anesthesiaType;
	}

	public void setAnesthesiaType(String anesthesiaType) {
		this.anesthesiaType = anesthesiaType;
	}

	@Column(name = "AnesthesiaSubType", length = 100)
	public String getAnesthesiaSubType() {
		return this.anesthesiaSubType;
	}

	public void setAnesthesiaSubType(String anesthesiaSubType) {
		this.anesthesiaSubType = anesthesiaSubType;
	}

	@Column(name = "Medicine", length = 1000)
	public String getMedicine() {
		return this.medicine;
	}

	public void setMedicine(String medicine) {
		this.medicine = medicine;
	}

	@Column(name = "Volume", precision = 12, scale = 0)
	public Float getVolume() {
		return this.volume;
	}

	public void setVolume(Float volume) {
		this.volume = volume;
	}

	@Column(name = "Adjustment", precision = 12, scale = 0)
	public Float getAdjustment() {
		return this.adjustment;
	}

	public void setAdjustment(Float adjustment) {
		this.adjustment = adjustment;
	}

	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

}
