/*******************************************************************************
 * ï¿½ 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.cdac.common.GeneratedEntities;
// Generated Oct 4, 2017 5:48:43 PM by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.cdac.common.audit.interceptor.IAuditLog;
/**
 * IntraopMedicationlog generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "intraop_medicationlog", catalog = "intraop_dev")
public class IntraopMedicationlog implements java.io.Serializable, IAuditLog
{

	private Long medicationLogId;
	private Patient patient;
	private Patientcase patientcase;
	private String medicationName;
	private String bolusInfusion;
	private Float infuseDosage;
	private Float medicationDosage;
	private Float volume;
	private String dosageUnit;
	private String rateOfInfusion;
	private String attachedToPump;
	private Date startTime;
	private Date endTime;
	private String routeId;
	private String comments;
	private String createdBy;
	private Date createdTime;
	private String updatedBy;
	private Date updatedTime;
	private boolean fromDevice;
	private String concentration;
	private String deviceSerialNumber;
	private Float startVol;
	private Float endVol;
	
	public IntraopMedicationlog()
	{
	}

	public IntraopMedicationlog(Patient patient, Patientcase patientcase, String medicationName, String bolusInfusion,
			float infuseDosage, Float volume)
	{
		this.patient = patient;
		this.patientcase = patientcase;
		this.medicationName = medicationName;
		this.bolusInfusion = bolusInfusion;
		this.infuseDosage = infuseDosage;
		this.volume = volume;
		
	}

	public IntraopMedicationlog(Long medicationLogId, Patient patient, Patientcase patientcase, String medicationName,
			String bolusInfusion, Float infuseDosage, Float volume, String dosageUnit,String rateOfInfusion,
			String attachedToPump, String routeId,String comments, String createdBy,
			Date createdTime, String updatedBy, Date updatedTime,boolean fromDevice) {
		super();
		this.medicationLogId = medicationLogId;
		this.patient = patient;
		this.patientcase = patientcase;
		this.medicationName = medicationName;
		this.bolusInfusion = bolusInfusion;
		this.infuseDosage = infuseDosage;
		this.volume = volume;
		this.dosageUnit = dosageUnit;
		this.rateOfInfusion = rateOfInfusion;
		this.attachedToPump = attachedToPump;
		this.routeId = routeId;
		this.comments = comments;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
		this.fromDevice=fromDevice;
	}

	public IntraopMedicationlog(Patient patient, Patientcase patientcase, String medicationName, String bolusInfusion,
			Float infuseDosage, Float volume,String rateOfInfusion, String attachedToPump, String routeId,
	        String comments, String createdBy, Date createdTime, String updatedBy,
	        Date updatedTime)
	{
		this.patient = patient;
		this.patientcase = patientcase;
		this.medicationName = medicationName;
		this.bolusInfusion = bolusInfusion;
		this.infuseDosage = infuseDosage;
		this.volume = volume;
		this.rateOfInfusion = rateOfInfusion;
		this.attachedToPump = attachedToPump;
		this.routeId = routeId;
		this.comments = comments;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	
	public IntraopMedicationlog(Long medicationLogId, Patient patient, Patientcase patientcase, String medicationName,
			String bolusInfusion, Float infuseDosage, Float volume, String dosageUnit, String rateOfInfusion,
			String attachedToPump, Date startTime, Date endTime, String routeId, String comments, String createdBy,
			Date createdTime, String updatedBy, Date updatedTime) {
		super();
		this.medicationLogId = medicationLogId;
		this.patient = patient;
		this.patientcase = patientcase;
		this.medicationName = medicationName;
		this.bolusInfusion = bolusInfusion;
		this.infuseDosage = infuseDosage;
		this.volume = volume;
		this.dosageUnit = dosageUnit;
		this.rateOfInfusion = rateOfInfusion;
		this.attachedToPump = attachedToPump;
		this.startTime = startTime;
		this.endTime = endTime;
		this.routeId = routeId;
		this.comments = comments;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}
	

	public IntraopMedicationlog(Patient patient, Patientcase patientcase, String medicationName, String bolusInfusion,
			Float infuseDosage, Float volume, String dosageUnit, String rateOfInfusion, String attachedToPump,
			Date startTime, Date endTime, String routeId, String comments, String createdBy, Date createdTime,
			String updatedBy, Date updatedTime) {
		super();
		this.patient = patient;
		this.patientcase = patientcase;
		this.medicationName = medicationName;
		this.bolusInfusion = bolusInfusion;
		this.infuseDosage = infuseDosage;
		this.volume = volume;
		this.dosageUnit = dosageUnit;
		this.rateOfInfusion = rateOfInfusion;
		this.attachedToPump = attachedToPump;
		this.startTime = startTime;
		this.endTime = endTime;
		this.routeId = routeId;
		this.comments = comments;
		this.createdBy = createdBy;
		this.createdTime = createdTime;
		this.updatedBy = updatedBy;
		this.updatedTime = updatedTime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "MedicationLogID", unique = true, nullable = false)
	public Long getMedicationLogId()
	{
		return this.medicationLogId;
	}

	public void setMedicationLogId(Long medicationLogId)
	{
		this.medicationLogId = medicationLogId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PatientID", nullable = false)
	public Patient getPatient()
	{
		return this.patient;
	}

	public void setPatient(Patient patient)
	{
		this.patient = patient;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CaseID", nullable = false)
	public Patientcase getPatientcase()
	{
		return this.patientcase;
	}

	public void setPatientcase(Patientcase patientcase)
	{
		this.patientcase = patientcase;
	}

	@Column(name = "MedicationName", nullable = false, length = 200)
	public String getMedicationName()
	{
		return this.medicationName;
	}

	public void setMedicationName(String medicationName)
	{
		this.medicationName = medicationName;
	}

	@Column(name = "BolusInfusion", nullable = false, length = 45)
	public String getBolusInfusion()
	{
		return this.bolusInfusion;
	}

	public void setBolusInfusion(String bolusInfusion)
	{
		this.bolusInfusion = bolusInfusion;
	}

	@Column(name = "InfuseDosage",length = 45)
	public Float getInfuseDosage() {
		return infuseDosage;
	}

	public void setInfuseDosage(Float infuseDosage) {
		this.infuseDosage = infuseDosage;
	}

	@Column(name = "MedicationDosage",length = 45)
	public Float getMedicationDosage() {
		return medicationDosage;
	}

	public void setMedicationDosage(Float medicationDosage) {
		this.medicationDosage = medicationDosage;
	}

	@Column(name = "Volume",length = 45)
	public Float getVolume()
	{
		return this.volume;
	}

	public void setVolume(Float volume)
	{
		this.volume = volume;
	}
	

	@Column(name = "DosageUnit",nullable = false, length = 45)
	public String getDosageUnit() {
		return dosageUnit;
	}

	public void setDosageUnit(String dosageUnit) {
		this.dosageUnit = dosageUnit;
	}

	@Column(name = "RateOfInfusion", length = 45)
	public String getRateOfInfusion()
	{
		return this.rateOfInfusion;
	}

	public void setRateOfInfusion(String rateOfInfusion)
	{
		this.rateOfInfusion = rateOfInfusion;
	}

	@Column(name = "AttachedToPump", length = 45)
	public String getAttachedToPump()
	{
		return this.attachedToPump;
	}

	public void setAttachedToPump(String attachedToPump)
	{
		this.attachedToPump = attachedToPump;
	}
	
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "StartTime", length = 19)
	public Date getStartTime() {
		return startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}
	
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EndTime", length = 19)
	public Date getEndTime() {
		return endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "RouteID", length = 45)
	public String getRouteId()
	{
		return this.routeId;
	}

	public void setRouteId(String routeId)
	{
		this.routeId = routeId;
	}

	

	@Column(name = "Comments", length = 2000)
	public String getComments()
	{
		return this.comments;
	}

	public void setComments(String comments)
	{
		this.comments = comments;
	}

	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy()
	{
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy)
	{
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime()
	{
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime)
	{
		this.createdTime = createdTime;
	}

	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy()
	{
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy)
	{
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime()
	{
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime)
	{
		this.updatedTime = updatedTime;
	}

	@Column(name = "FromDevice")
	public boolean isFromDevice() {
		return fromDevice;
	}

	public void setFromDevice(boolean fromDevice) {
		this.fromDevice = fromDevice;
	}
	
	@Column(name = "Concentration")
	public String getConcentration() {
		return concentration;
	}

	public void setConcentration(String concentration) {
		this.concentration = concentration;
	}

	@Column(name = "DeviceSerialNumber")
	public String getDeviceSerialNumber() {
		return deviceSerialNumber;
	}

	public void setDeviceSerialNumber(String deviceSerialNumber) {
		this.deviceSerialNumber = deviceSerialNumber;
	}
	@Column(name = "startVol")
	public Float getStartVol() {
		return startVol;
	}

	public void setStartVol(Float startVol) {
		this.startVol = startVol;
	}
	@Column(name = "endVol")
	public Float getEndVol() {
		return endVol;
	}

	public void setEndVol(Float endVol) {
		this.endVol = endVol;
	}

	@Transient
	@Override
	public Long getId()
	{
		return (long) medicationLogId;
	}
	@Transient
	@Override
	public String getLogDeatil()
	{
		return toString();
	}

	@Override
	public String toString() {
		return "IntraopMedicationlog [medicationLogId=" + medicationLogId + ", patient=" + patient + ", patientcase="
				+ patientcase + ", medicationName=" + medicationName + ", bolusInfusion=" + bolusInfusion
				+ ", infuseDosage=" + infuseDosage + ", volume=" + volume + ", dosageUnit=" + dosageUnit
				+ ", rateOfInfusion=" + rateOfInfusion + ", attachedToPump=" + attachedToPump + ", startTime="
				+ startTime + ", endTime=" + endTime + ", routeId=" + routeId + ", comments=" + comments
				+ ", createdBy=" + createdBy + ", createdTime=" + createdTime + ", updatedBy=" + updatedBy
				+ ", updatedTime=" + updatedTime + ", fromDevice=" + fromDevice + ", concentration=" + concentration
				+ ", deviceSerialNumber=" + deviceSerialNumber + "]";
	}
	
}
