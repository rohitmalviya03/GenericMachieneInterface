/*******************************************************************************
 * ï¿½ 2018-2019 Infosys Limited, Bangalore, India. All Rights Reserved. 
 * Version: 1.0.0.0
 *
 * This Program is protected by copyright laws, international treaties and other pending or existing intellectual property rights in India, the United States and other countries. Except as expressly permitted, any unauthorized reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical, printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. 
 *******************************************************************************/
package com.cdac.common.GeneratedEntities;
// Generated Nov 1, 2017 5:45:51 PM by Hibernate Tools 4.3.5.Final

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Investigationsvalues generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "investigationsvalues", catalog = "intraop_dev")
public class Investigationsvalues implements java.io.Serializable {

	private Integer investigationsValuesId;
	private BigDecimal value;
	private Integer exponent;
	private Investigationmeasuringunits measuringUnit;
	private Investigationmeasuringunitratios measuringUnitRatio;
	private Investigationtestsparameters investigationTestsParameters;
	private String investigationsvaluescol;
	private Investigationvaluescasemapper investigationValuesCaseMapper;
	private String createdBy;
	private Date createdTime;
	private String updatedBy;
	private Date updatedTime;

	public Investigationsvalues() {
	}

	public Investigationsvalues(Investigationtestsparameters investigationTestsParameters) {
		this.investigationTestsParameters = investigationTestsParameters;
	}

	public Investigationsvalues(BigDecimal value, Integer exponent, Investigationmeasuringunits measuringUnit,
			Investigationmeasuringunitratios measuringUnitRatio, Investigationtestsparameters investigationTestsParameters, String investigationsvaluescol,
			Investigationvaluescasemapper investigationValuesCaseMapper) {
		this.value = value;
		this.exponent = exponent;
		this.measuringUnit = measuringUnit;
		this.measuringUnitRatio = measuringUnitRatio;
		this.investigationTestsParameters = investigationTestsParameters;
		this.investigationsvaluescol = investigationsvaluescol;
		this.investigationValuesCaseMapper = investigationValuesCaseMapper;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "InvestigationsValuesID", unique = true, nullable = false)
	public Integer getInvestigationsValuesId() {
		return this.investigationsValuesId;
	}

	public void setInvestigationsValuesId(Integer investigationsValuesId) {
		this.investigationsValuesId = investigationsValuesId;
	}

	@Column(name = "Value", precision = 13)
	public BigDecimal getValue() {
		return this.value;
	}

	public void setValue(BigDecimal value) {
		this.value = value;
	}

	@Column(name = "Exponent")
	public Integer getExponent() {
		return this.exponent;
	}

	public void setExponent(Integer exponent) {
		this.exponent = exponent;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MeasuringUnitID")
	public Investigationmeasuringunits getMeasuringUnit() {
		return this.measuringUnit;
	}

	public void setMeasuringUnit(Investigationmeasuringunits measuringUnit) {
		this.measuringUnit = measuringUnit;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MeasuringUnitRatioID")
	public Investigationmeasuringunitratios getMeasuringUnitRatio() {
		return this.measuringUnitRatio;
	}

	public void setMeasuringUnitRatio(Investigationmeasuringunitratios measuringUnitRatio) {
		this.measuringUnitRatio = measuringUnitRatio;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "InvestigationTestsParametersID", nullable = false)
	public Investigationtestsparameters getInvestigationTestsParameters() {
		return this.investigationTestsParameters;
	}

	public void setInvestigationTestsParameters(Investigationtestsparameters investigationTestsParameters) {
		this.investigationTestsParameters = investigationTestsParameters;
	}

	@Column(name = "investigationsvaluescol", length = 45)
	public String getInvestigationsvaluescol() {
		return this.investigationsvaluescol;
	}

	public void setInvestigationsvaluescol(String investigationsvaluescol) {
		this.investigationsvaluescol = investigationsvaluescol;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	//@JoinColumn(name = "InvestigationValuesCaseMapperID", nullable = false)
	@JoinColumn(name = "InvestigationValuesCaseMapperID", nullable = false)
	//public Investigationvaluescasemapper getInvestigationvaluescasemapper() 
	public Investigationvaluescasemapper getInvestigationValuesCaseMapper() 
	{
		return this.investigationValuesCaseMapper;
	}

	//public void setInvestigationvaluescasemapper(Investigationvaluescasemapper investigationValuesCaseMapper) 
	public void setInvestigationValuesCaseMapper(Investigationvaluescasemapper investigationValuesCaseMapper) 
	{
		this.investigationValuesCaseMapper = investigationValuesCaseMapper;
	}
	
	@Column(name = "CreatedBy", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedTime", length = 19)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "UpdatedBy", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedTime", length = 19)
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

}
